// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/cart": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the user's cart grouped by markets. Requires user JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get user cart",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds or updates a product in the user's cart. Requires user JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Add to cart",
                "parameters": [
                    {
                        "description": "Cart entry details",
                        "name": "cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CartRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/favorites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a paginated list of favorite products. Requires JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Get user's favorite products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds or removes a product from favorites. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorites"
                ],
                "summary": "Toggle favorite product",
                "parameters": [
                    {
                        "description": "Product ID",
                        "name": "favorite",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FavoriteRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/markets/{id}/thumbnail": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads a thumbnail image for a specific market. Requires JWT authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Markets"
                ],
                "summary": "Upload market thumbnail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Market ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Thumbnail image",
                        "name": "thumbnail",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/products": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new product for the market admin's market. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ProductRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/products/{id}/thumbnails": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds multiple thumbnail images with associated colors to a product by ID. Requires JWT authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Add thumbnails to a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of colors for thumbnails",
                        "name": "colors",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Thumbnail images",
                        "name": "thumbnails",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/products/{product_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a product for the market admin's market. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ProductRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a product and its thumbnails for the market admin's market. Requires JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/sizes/{size_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a size by its ID. Requires JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a size by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Size ID",
                        "name": "size_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/thumbnails/{thumbnail_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a thumbnail by its ID. Requires JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a thumbnail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thumbnail ID",
                        "name": "thumbnail_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/market/thumbnails/{thumbnail_id}/size": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a size with count linked to a thumbnail. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Add a size by thumbnail ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thumbnail ID",
                        "name": "thumbnail_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Size and count",
                        "name": "size",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SizeRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/superadmin/categories": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a category with name and optional thumbnail image. Requires superadmin JWT authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Thumbnail image",
                        "name": "thumbnail",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/superadmin/categories/{category_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a category and its thumbnail image. Requires superadmin JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/superadmin/markets": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new market with an admin account and optional thumbnail image. Requires superadmin JWT authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Markets"
                ],
                "summary": "Create a new market",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Market name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin full name",
                        "name": "full_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Delivery price",
                        "name": "delivery_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Thumbnail image",
                        "name": "thumbnail",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/superadmin/markets/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a market, its products, and thumbnails. Requires superadmin JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Markets"
                ],
                "summary": "Delete a market",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Market ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/categories": {
            "get": {
                "description": "Retrieves a paginated list of categories with optional name search. Requires superadmin JWT authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by category name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/login": {
            "post": {
                "description": "Initiates login by sending a verification code to the user's phone number. Checks if the phone is registered and logs the code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Initiate user login",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/market/login": {
            "post": {
                "description": "Authenticates a market admin and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login market admin",
                "parameters": [
                    {
                        "description": "Market admin credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MarketRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/markets": {
            "get": {
                "description": "Retrieves a list of all markets. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Markets"
                ],
                "summary": "Get all markets",
                "responses": {}
            }
        },
        "/markets/{id}": {
            "get": {
                "description": "Retrieves market details and its products by market ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Markets"
                ],
                "summary": "Get market by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Market ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/products": {
            "get": {
                "description": "Retrieves paginated products with optional category and name search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by product name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retrieves a single product by its ID. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user with a full name and phone number, sending a verification code. Validates input, checks for duplicate phone numbers, and logs the code (replace with SMS in production).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/superadmin/login": {
            "post": {
                "description": "Authenticates a superadmin and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Superadmin"
                ],
                "summary": "Login superadmin",
                "parameters": [
                    {
                        "description": "Superadmin credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SuperadminRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/superadmin/register": {
            "post": {
                "description": "Registers a new superadmin with username, full name, phone, and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Superadmin"
                ],
                "summary": "Register a new superadmin",
                "parameters": [
                    {
                        "description": "Superadmin details",
                        "name": "superadmin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SuperadminRegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/thumbnails": {
            "get": {
                "description": "Retrieves a list of all thumbnails with associated product information. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all thumbnails with product details",
                "responses": {}
            }
        },
        "/users/register": {
            "post": {
                "description": "Registers a user and sends OTP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/verify": {
            "post": {
                "description": "Verifies a phone number using a 4-digit code, issuing a JWT token upon successful verification. Deletes the used code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify phone number",
                "parameters": [
                    {
                        "description": "Verification details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VerifyCodeRequest"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.CartRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "market_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "size_id": {
                    "type": "integer"
                },
                "thumbnail_id": {
                    "type": "integer"
                }
            }
        },
        "api.FavoriteRequest": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "api.LoginRequest": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string",
                    "example": "+12345678901"
                }
            }
        },
        "api.MarketRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.ProductRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "api.RegisterRequest": {
            "type": "object",
            "required": [
                "full_name",
                "phone"
            ],
            "properties": {
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "phone": {
                    "type": "string",
                    "example": "+12345678901"
                }
            }
        },
        "api.SizeRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "api.SuperadminRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.UserRegisterRequest": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "api.VerifyCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "phone"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "1234"
                },
                "phone": {
                    "type": "string",
                    "example": "+12345678901"
                }
            }
        },
        "models.SuperadminRegisterRequest": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer token for authentication (e.g., \"Bearer \u003ctoken\u003e\")",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "192.168.55.42:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "E-commerce API",
	Description:      "API for an e-commerce platform with OTP-based authentication and product/market management.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
