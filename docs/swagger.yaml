basePath: /
definitions:
  api.FavoriteRequest:
    properties:
      product_id:
        type: integer
    type: object
  api.LocationRequest:
    properties:
      location_address:
        type: string
      location_address_ru:
        type: string
      location_name:
        type: string
      location_name_ru:
        type: string
    type: object
  api.LoginRequest:
    properties:
      phone:
        example: "+12345678901"
        type: string
    required:
    - phone
    type: object
  api.MarketRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    type: object
  api.OrderRequest:
    properties:
      location_id:
        type: integer
      name:
        type: string
      notes:
        type: string
      phone:
        type: string
    type: object
  api.ProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      description_ru:
        type: string
      discount:
        type: number
      is_active:
        type: boolean
      name:
        type: string
      name_ru:
        type: string
      price:
        type: number
    type: object
  api.RegisterRequest:
    properties:
      full_name:
        example: John Doe
        type: string
      phone:
        example: "+12345678901"
        type: string
    required:
    - full_name
    - phone
    type: object
  api.SizeRequest:
    properties:
      count:
        type: integer
      price:
        type: number
      size:
        type: string
    type: object
  api.SuperadminRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  api.VerifyCodeRequest:
    properties:
      code:
        example: "1234"
        type: string
      phone:
        example: "+12345678901"
        type: string
    required:
    - code
    - phone
    type: object
  models.CartRequest:
    properties:
      count:
        type: integer
      product_id:
        type: integer
      size_id:
        type: integer
      thumbnail_id:
        type: integer
    type: object
  models.SuperadminRegisterRequest:
    properties:
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.UpdateCartRequest:
    properties:
      count_change:
        type: integer
    type: object
  models.UpdateLocationRequest:
    properties:
      location_address:
        type: string
      location_name:
        type: string
    type: object
  models.UpdateProfileRequest:
    properties:
      full_name:
        type: string
      phone:
        type: string
    type: object
host: 192.168.55.42:8080
info:
  contact: {}
  description: API for an e-commerce platform with OTP-based authentication and product/market
    management.
  title: E-commerce API
  version: "1.0"
paths:
  /api/cart:
    delete:
      description: Deletes all cart entries for the authenticated user. Requires user
        JWT authentication.
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Clear cart
      tags:
      - Cart
    get:
      description: Retrieves the user's cart grouped by cart order and markets. Requires
        user JWT authentication.
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get user cart
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Adds or updates a product in the user's cart for a market under
        a single cart order. Requires user JWT authentication.
      parameters:
      - description: Cart entry details
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/models.CartRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Add to cart
      tags:
      - Cart
  /api/cart-product/{size_id}:
    delete:
      description: Deletes a specific cart entry for the authenticated user based
        on size_id. Requires user JWT authentication.
      parameters:
      - description: Size ID
        in: path
        name: size_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete cart entry by size_id
      tags:
      - Cart
  /api/cart/{cart_order_id}:
    delete:
      description: Deletes all entries for a user's cart order by cart_order_id. Requires
        user JWT authentication.
      parameters:
      - description: Cart Order ID
        in: path
        name: cart_order_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete cart
      tags:
      - Cart
  /api/cart/{cart_order_id}/order:
    post:
      consumes:
      - application/json
      description: Submits an order for a cart order with location and user details.
        Requires user JWT authentication.
      parameters:
      - description: Cart Order ID
        in: path
        name: cart_order_id
        required: true
        type: string
      - description: Order details
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/api.OrderRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create order
      tags:
      - Orders
  /api/cart/{size_id}:
    put:
      consumes:
      - application/json
      description: Updates the count of a specific cart entry for the authenticated
        user based on size_id. Requires user JWT authentication.
      parameters:
      - description: Size ID
        in: path
        name: size_id
        required: true
        type: integer
      - description: Count change
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCartRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update cart entry count
      tags:
      - Cart
  /api/favorites:
    get:
      description: Retrieves a paginated list of favorite products. Requires JWT authentication.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get user's favorite products
      tags:
      - Favorites
    post:
      consumes:
      - application/json
      description: Adds or removes a product from favorites. Requires JWT authentication.
      parameters:
      - description: Product ID
        in: body
        name: favorite
        required: true
        schema:
          $ref: '#/definitions/api.FavoriteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Toggle favorite product
      tags:
      - Favorites
  /api/locations:
    get:
      description: Retrieves all locations for the authenticated user.
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get user locations
      tags:
      - Locations
    post:
      consumes:
      - application/json
      description: Adds a new location with name and address for the authenticated
        user.
      parameters:
      - description: Location details
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/api.LocationRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Add location
      tags:
      - Locations
  /api/locations/{location_id}:
    delete:
      description: Deletes a specific location for the authenticated user if no orders
        reference it. Requires user JWT authentication.
      parameters:
      - description: Location ID
        in: path
        name: location_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete location
      tags:
      - Locations
    put:
      consumes:
      - application/json
      description: Updates the name and/or address of a specific location for the
        authenticated user. Requires user JWT authentication.
      parameters:
      - description: Location ID
        in: path
        name: location_id
        required: true
        type: integer
      - description: Location update details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateLocationRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update location
      tags:
      - Locations
  /api/market/markets/{id}/thumbnail:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a thumbnail image for a specific market. Requires JWT authentication.
      parameters:
      - description: Market ID
        in: path
        name: id
        required: true
        type: string
      - description: Thumbnail image
        in: formData
        name: thumbnail
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Upload market thumbnail
      tags:
      - Markets
  /api/market/orders:
    get:
      description: Retrieves all orders for the market admin's market, optionally
        filtered by status. Requires market admin JWT authentication.
      parameters:
      - description: Order status (pending, processing, delivered, cancelled)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get market admin orders
      tags:
      - Market Admin
  /api/market/orders/{cart_order_id}:
    get:
      description: Retrieves detailed order information for a specific cart_order_id.
        Requires market admin JWT authentication.
      parameters:
      - description: Cart Order ID
        in: path
        name: cart_order_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get market admin order by ID
      tags:
      - Market Admin
  /api/market/products:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new product for the market admin's market with an optional
        thumbnail. Requires JWT authentication.
      parameters:
      - description: Product name
        in: formData
        name: name
        required: true
        type: string
      - description: Product name in Russian
        in: formData
        name: name_ru
        type: string
      - description: Product price
        in: formData
        name: price
        required: true
        type: number
      - description: Product discount (0-100)
        in: formData
        name: discount
        type: number
      - description: Product description
        in: formData
        name: description
        type: string
      - description: Product description in Russian
        in: formData
        name: description_ru
        type: string
      - description: Category ID
        in: formData
        name: category_id
        required: true
        type: integer
      - description: Is product active
        in: formData
        name: is_active
        type: boolean
      - description: Thumbnail image
        in: formData
        name: thumbnail
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - Products
  /api/market/products/{id}/thumbnails:
    post:
      consumes:
      - multipart/form-data
      description: Adds multiple thumbnail images with associated colors to a product
        by ID. Requires JWT authentication.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Comma-separated list of colors for thumbnails
        in: formData
        name: colors
        required: true
        type: string
      - description: Comma-separated list of colors_ru for thumbnails
        in: formData
        name: colors_ru
        required: true
        type: string
      - description: Thumbnail images
        in: formData
        name: thumbnails
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Add thumbnails to a product
      tags:
      - Products
  /api/market/products/{product_id}:
    delete:
      description: Deletes a product and its thumbnails for the market admin's market.
        Requires JWT authentication.
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Updates a product for the market admin's market. Requires JWT authentication.
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/api.ProductRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update a product
      tags:
      - Products
  /api/market/sizes/{size_id}:
    delete:
      description: Deletes a size by its ID. Requires JWT authentication.
      parameters:
      - description: Size ID
        in: path
        name: size_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a size by ID
      tags:
      - Products
  /api/market/thumbnails/{thumbnail_id}:
    delete:
      description: Deletes a thumbnail by its ID. Requires JWT authentication.
      parameters:
      - description: Thumbnail ID
        in: path
        name: thumbnail_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a thumbnail
      tags:
      - Products
  /api/market/thumbnails/{thumbnail_id}/size:
    post:
      consumes:
      - application/json
      description: Adds a size with count linked to a thumbnail. Requires JWT authentication.
      parameters:
      - description: Thumbnail ID
        in: path
        name: thumbnail_id
        required: true
        type: string
      - description: Size and count
        in: body
        name: size
        required: true
        schema:
          $ref: '#/definitions/api.SizeRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Add a size by thumbnail ID
      tags:
      - Products
  /api/profile:
    get:
      description: Retrieves the full_name, phone, and id of the authenticated user.
        Requires user JWT authentication.
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - Profile
    put:
      consumes:
      - application/json
      description: Updates the full_name and/or phone of the authenticated user. Requires
        user JWT authentication.
      parameters:
      - description: Profile update details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - Profile
  /api/superadmin/categories:
    post:
      consumes:
      - multipart/form-data
      description: Creates a category with name and optional thumbnail image. Requires
        superadmin JWT authentication.
      parameters:
      - description: Category name
        in: formData
        name: name
        required: true
        type: string
      - description: Category name_ru
        in: formData
        name: name_ru
        required: true
        type: string
      - description: Thumbnail image
        in: formData
        name: thumbnail
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - Categories
  /api/superadmin/categories/{category_id}:
    delete:
      description: Deletes a category and its thumbnail image. Requires superadmin
        JWT authentication.
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a category
      tags:
      - Categories
  /api/superadmin/markets:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new market with an admin account and optional thumbnail
        image. Requires superadmin JWT authentication.
      parameters:
      - description: Market name
        in: formData
        name: name
        required: true
        type: string
      - description: Market name russian
        in: formData
        name: name_ru
        required: true
        type: string
      - description: Admin phone
        in: formData
        name: phone
        required: true
        type: string
      - description: Delivery price
        in: formData
        name: delivery_price
        required: true
        type: number
      - description: Admin password
        in: formData
        name: password
        required: true
        type: string
      - description: Thumbnail image
        in: formData
        name: thumbnail
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create a new market
      tags:
      - Markets
  /api/superadmin/markets/{id}:
    delete:
      description: Deletes a market, its products, and thumbnails. Requires superadmin
        JWT authentication.
      parameters:
      - description: Market ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a market
      tags:
      - Markets
  /categories:
    get:
      description: Retrieves a paginated list of categories with optional name search.
        Requires superadmin JWT authentication.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: limit
        type: integer
      - description: Search by category name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get categories
      tags:
      - Categories
  /login:
    post:
      consumes:
      - application/json
      description: Initiates login by sending a verification code to the user's phone
        number. Checks if the phone is registered and logs the code.
      parameters:
      - description: User login details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: Initiate user login
      tags:
      - Authentication
  /market/login:
    post:
      consumes:
      - application/json
      description: Authenticates a market admin and returns a JWT token.
      parameters:
      - description: Market admin credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.MarketRequest'
      produces:
      - application/json
      responses: {}
      summary: Login market admin
      tags:
      - Authentication
  /markets:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all markets. Requires JWT authentication.
      produces:
      - application/json
      responses: {}
      summary: Get all markets
      tags:
      - Markets
  /markets/{id}:
    get:
      description: Retrieves market details and its products by market ID.
      parameters:
      - description: Market ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get market by ID
      tags:
      - Markets
  /products:
    get:
      description: Retrieves paginated products with optional category, name search,
        or random selection for homepage
      parameters:
      - description: Category ID
        in: query
        name: category_id
        type: string
      - description: 'Duration day for new (default: 7)'
        in: query
        name: duration
        type: integer
      - description: 'Page number (default: 1, ignored if random=true)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10, ignored if random=true)'
        in: query
        name: limit
        type: integer
      - description: Search by product name
        in: query
        name: search
        type: string
      - description: 'Return 10 random products (default: false)'
        in: query
        name: random
        type: boolean
      produces:
      - application/json
      responses: {}
      summary: Get all products
      tags:
      - Products
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a single product by its ID. Requires JWT authentication.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a product by ID
      tags:
      - Products
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with a full name and phone number, sending
        a verification code. Validates input, checks for duplicate phone numbers,
        and logs the code (replace with SMS in production).
      parameters:
      - description: User registration details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: Register a new user
      tags:
      - Authentication
  /superadmin/login:
    post:
      consumes:
      - application/json
      description: Authenticates a superadmin and returns a JWT token.
      parameters:
      - description: Superadmin credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.SuperadminRequest'
      produces:
      - application/json
      responses: {}
      summary: Login superadmin
      tags:
      - Superadmin
  /superadmin/register:
    post:
      consumes:
      - application/json
      description: Registers a new superadmin with username, full name, phone, and
        password.
      parameters:
      - description: Superadmin details
        in: body
        name: superadmin
        required: true
        schema:
          $ref: '#/definitions/models.SuperadminRegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: Register a new superadmin
      tags:
      - Superadmin
  /thumbnails:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all thumbnails with associated product information.
        Requires JWT authentication.
      produces:
      - application/json
      responses: {}
      summary: Get all thumbnails with product details
      tags:
      - Products
  /verify:
    post:
      consumes:
      - application/json
      description: Verifies a phone number using a 4-digit code, issuing a JWT token
        upon successful verification. Deletes the used code.
      parameters:
      - description: Verification details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.VerifyCodeRequest'
      produces:
      - application/json
      responses: {}
      summary: Verify phone number
      tags:
      - Authentication
securityDefinitions:
  BearerAuth:
    description: Bearer token for authentication (e.g., "Bearer <token>")
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
